#!/usr/local/bin/python3

# For training data, we'll be using an hour-long interview that the
# assemblymember gave on the Max Politics podcast. It's available on
# soundcloud at 
# https://soundcloud.com/gotham-gazette-max-murphy/assemblymember-alex-bores-on-ai-opportunity-court-reform-housing-policy-more.

from pydub import AudioSegment

input_file = (
    "/home/henryj/deepfake/unprocessed/entire-podcast.mp3"
)

# convert take the mp3 from soundcloud...
sound = AudioSegment.from_mp3(input_file)

for timeRange_ms in enumerate(
    [ # timestamps for slices are in milliseconds -- I got them
      # by listening to the podcast and noting when Alex starts
      # and stops talking.
      # (start time, stop time), with time as (min*60 + sec) * 1000
      ((4  * 60 + 22) * 1000, (4  * 60 + 28) * 1000), # 00 (original)

      ((5  * 60 + 11) * 1000, (5  * 60 + 21) * 1000), # 01 (original)
      ((5  * 60 + 21) * 1000, (5  * 60 + 33) * 1000), # 01 (original)
      ((5  * 60 + 33) * 1000, (5  * 60 + 41) * 1000), # 01 (original)
      ((5  * 60 + 41) * 1000, (5  * 60 + 45) * 1000), # 01 (original)

      ((6  * 60 + 14) * 1000, (6  * 60 + 22) * 1000), # 02 (modified 1/4)
      ((6  * 60 + 22) * 1000, (6  * 60 + 29) * 1000), # 02 (modified 2/4)
      ((6  * 60 + 14) * 1000, (6  * 60 + 25) * 1000), # 02 (modified 3/4) #### start 7
      ((6  * 60 + 25) * 1000, (6  * 60 + 28) * 1000), # 02 (modified 3/4)
      ((6  * 60 + 28) * 1000, (6  * 60 + 38) * 1000), # 02 (modified 3/4)
      ((6  * 60 + 38) * 1000, (6  * 60 + 43.5) * 1000), # 02 (modified 3/4) #### end 7
      ((6  * 60 + 43.5) * 1000, (6  * 60 + 45) * 1000), # 02 (modified 4/4)

      ((7  * 60 +  9) * 1000, (7  * 60 + 17) * 1000), # 03 (original)
      ((7  * 60 + 17) * 1000, (7  * 60 + 30) * 1000), # 03 (original)
      ((7  * 60 + 30) * 1000, (7  * 60 + 42) * 1000), # 03 (original)
      ((7  * 60 + 42) * 1000, (7  * 60 + 54) * 1000), # 03 (original)
      ((7  * 60 + 54) * 1000, (8  * 60 +  7) * 1000), # 03 (original)
      ((8  * 60 +  7) * 1000, (8  * 60 + 14) * 1000), # 03 (original)

      ((10 * 60 + 13) * 1000, (10 * 60 + 22) * 1000), # 04 (modified 1/10)
      ((10 * 60 + 22) * 1000, (10 * 60 + 37) * 1000), # 04 (original 2/10)
      ((10 * 60 + 37) * 1000, (10 * 60 + 45) * 1000), # 04 (original 3/10)
      ((10 * 60 + 45) * 1000, (10 * 60 + 55.5) * 1000), # 04 (original 4/10)
      ((10 * 60 + 55.5) * 1000, (10 * 60 + 59.5) * 1000), # 04 (original 5/10)
      ((10 * 60 + 59.5) * 1000, (11 * 60 + 10) * 1000), # 04 (original 6/10)
      ((11 * 60 + 10) * 1000, (11 * 60 + 16.5) * 1000), # 04 (original 7/10)
      ((11 * 60 + 16.5) * 1000, (11 * 60 + 29) * 1000), # 04 (original 8/10)
      ((11 * 60 + 29) * 1000, (11 * 60 + 35) * 1000), # 04 (original 9/10)
      ((11 * 60 + 35) * 1000, (11 * 60 + 46) * 1000), # 04 (original 10/10)

      ((12 * 60 + 23) * 1000, (12 * 60 + 34) * 1000), # 05 (original)
      ((12 * 60 + 34) * 1000, (12 * 60 + 47.5) * 1000), # 05 (original)
      ((12 * 60 + 47.5) * 1000, (12 * 60 +  57) * 1000), # 05 (original)
      ((12 * 60 + 57) * 1000, (13 * 60 +  6) * 1000), # 05 (original)

      ((15 * 60 +  9) * 1000, (15 * 60 +  16) * 1000), # 06 (original)
      ((15 * 60 + 16) * 1000, (15 * 60 +  29) * 1000), # 06 (original)
      ((15 * 60 + 29) * 1000, (15 * 60 +  34.5) * 1000), # 06 (original)
      ((15 * 60 + 34.5) * 1000, (15 * 60 + 43.5) * 1000), # 06 (original)
      ((15 * 60 + 43.5) * 1000, (15 * 60 + 53) * 1000), # 06 (original)
      ((15 * 60 +  53) * 1000, (16 * 60 +  6) * 1000), # 06 (original)

      ((18 * 60 +  7) * 1000, (18 * 60 + 20) * 1000),
      ((18 * 60 + 20) * 1000, (18 * 60 + 31) * 1000),
      ((18 * 60 + 31) * 1000, (18 * 60 + 45) * 1000),
      ((18 * 60 + 45) * 1000, (18 * 60 + 57) * 1000),
      ((18 * 60 + 57) * 1000, (19 * 60 +  8) * 1000),
      ((19 * 60 +  8) * 1000, (19 * 60 + 21) * 1000),

      ((19 * 60 + 25) * 1000, (19 * 60 + 30) * 1000), # 08 (original)
      ((19 * 60 + 30) * 1000, (19 * 60 + 40) * 1000), # 08 (original)

      ((20 * 60 + 17) * 1000, (20 * 60 + 28.5) * 1000), # 09 (original)
      ((20 * 60 + 28.5) * 1000, (20 * 60 + 38) * 1000), # 09 (original)
      ((20 * 60 + 38) * 1000, (20 * 60 + 47) * 1000), # 09 (original)
      ((20 * 60 + 47) * 1000, (20 * 60 + 58) * 1000), # 09 (original)
      ((20 * 60 + 58) * 1000, (21 * 60 + 11.2) * 1000), # 09 (original)
      ((21 * 60 + 11.2) * 1000, (21 * 60 + 23) * 1000), # 09 (original)

      ((21 * 60 + 53) * 1000, (22 * 60 +  3) * 1000), # 10 (original)
      ((22 * 60 +  3) * 1000, (22 * 60 + 18) * 1000), # 10 (original)
      ((22 * 60 + 18) * 1000, (22 * 60 + 31) * 1000), # 10 (original)
      ((22 * 60 + 31) * 1000, (22 * 60 + 43.5) * 1000), # 10 (original)
      ((22 * 60 + 43.5) * 1000, (22 * 60 + 56.5) * 1000), # 10 (original)
      ((22 * 60 + 56.5) * 1000, (23 * 60 + 8.5) * 1000), # 10 (original)
      ((23 * 60 + 8.5) * 1000, (23 * 60 + 22.5) * 1000), # 10 (original) #55
      ((23 * 60 + 22.5) * 1000, (23 * 60 + 33) * 1000), # 10 (original) #55
      ((23 * 60 + 33) * 1000, (23 * 60 + 45) * 1000), # 10 (original)
      ((23 * 60 + 45) * 1000, (23 * 60 + 58) * 1000), # 10 (original)

      ((24 * 60 + 27) * 1000, (24 * 60 + 28) * 1000), # 11 (original)
      ((24 * 60 + 28) * 1000, (24 * 60 + 39) * 1000), # 11 (original) # 59
      ((24 * 60 + 39) * 1000, (24 * 60 + 50) * 1000), # 11 (original) # 59
      ((24 * 60 + 50) * 1000, (25 * 60 +  2) * 1000), # 11 (original)
      ((25 * 60 +  2) * 1000, (25 * 60 + 23) * 1000), # 11 (original)
      ((25 * 60 + 23) * 1000, (25 * 60 + 25) * 1000), # 11 (original)

      ((25 * 60 + 51) * 1000, (26 * 60 +  2) * 1000), # 12 (original)
      ((26 * 60 +  2) * 1000, (26 * 60 + 9.5) * 1000), # 12 (original)
      ((26 * 60 + 9.5) * 1000, (26 * 60 + 21) * 1000), # 12 (original)
      ((26 * 60 + 21) * 1000, (26 * 60 + 29) * 1000), # 12 (original)
      ((26 * 60 + 29) * 1000, (26 * 60 + 36) * 1000), # 12 (original)
      ((26 * 60 + 36) * 1000, (26 * 60 + 46) * 1000), # 12 (original)

      ((27 * 60 + 13) * 1000, (27 * 60 + 21) * 1000), # 13 (original)
      ((27 * 60 + 21) * 1000, (27 * 60 + 26) * 1000), # 13 (original)

      ((29 * 60 + 42) * 1000, (29 * 60 + 52) * 1000), # 14 (original)
      ((29 * 60 + 52) * 1000, (29 * 60 + 56.5) * 1000), # 14 (original)
      ((29 * 60 + 56.5) * 1000, (30 * 60 + 9.5) * 1000), # 14 (original)
      ((30 * 60 + 9.5) * 1000, (30 * 60 + 14.5) * 1000), # 14 (original)
      ((30 * 60 + 14.5) * 1000, (30 * 60 + 18) * 1000), # 14 (original)
      ((30 * 60 + 18) * 1000, (30 * 60 + 27) * 1000), # 14 (original)
      ((30 * 60 + 27) * 1000, (30 * 60 + 36) * 1000), # 14 (original)
      ((30 * 60 + 36) * 1000, (30 * 60 + 46) * 1000), # 14 (original)
      ((30 * 60 + 46) * 1000, (30 * 60 + 54) * 1000), # 14 (original)
      ((30 * 60 + 54) * 1000, (31 * 60 + 10.2) * 1000), # 14 (original)
      ((31 * 60 + 13) * 1000, (31 * 60 + 20) * 1000), # 14 (original)
      ((31 * 60 + 20) * 1000, (31 * 60 + 29) * 1000), # 14 (original)
      ((31 * 60 + 29) * 1000, (31 * 60 + 38) * 1000), # 14 (original)
      ((31 * 60 + 38) * 1000, (31 * 60 + 41) * 1000), # 14 (original)
      ((31 * 60 + 41) * 1000, (31 * 60 + 55) * 1000), # 14 (original)
      ((31 * 60 + 55) * 1000, (32 * 60 + 12) * 1000), # 14 (original)
      ((32 * 60 + 12) * 1000, (32 * 60 + 18) * 1000), # 14 (original)

      ((32 * 60 + 57) * 1000, (33 * 60 + 12) * 1000), # 15 (original)
      ((33 * 60 + 22) * 1000, (33 * 60 + 22) * 1000), # 15 (original) # 89

      ((33 * 60 + 51) * 1000, (34 * 60 +  2) * 1000), # 16 (original)
      ((34 * 60 +  2) * 1000, (34 * 60 + 14) * 1000), # 16 (original)
      ((34 * 60 + 14) * 1000, (34 * 60 + 32) * 1000), # 16 (original)
      ((34 * 60 + 32) * 1000, (34 * 60 + 45.5) * 1000), # 16 (original)
      ((34 * 60 + 45.5) * 1000, (34 * 60 + 54) * 1000), # 16 (original)
      ((34 * 60 + 54) * 1000, (35 * 60 +  6) * 1000), # 16 (original)
      ((35 * 60 +  6) * 1000, (35 * 60 + 18) * 1000), # 16 (original) # 96
      ((35 * 60 + 18) * 1000, (35 * 60 + 24) * 1000), # 16 (original)

      ((36 * 60 + 27) * 1000, (36 * 60 + 34.5) * 1000), # 17 (modified 1/20)
      ((36 * 60 + 34.5) * 1000, (36 * 60 + 42) * 1000), # 17 (modified 2/20)
      ((36 * 60 + 42) * 1000, (36 * 60 + 50.5) * 1000), # 17 (modified 3/20) # 100
      ((36 * 60 + 55) * 1000, (37 * 60 +  8) * 1000), # 17 (modified 4/20)
      ((37 * 60 +  8) * 1000, (37 * 60 + 17) * 1000), # 17 (modified 5/20)
      ((37 * 60 + 17) * 1000, (37 * 60 + 31) * 1000), # 17 (modified 6/20)
      ((37 * 60 + 31) * 1000, (37 * 60 + 34.5) * 1000), # 17 (modified 7/20)
      ((37 * 60 + 34) * 1000, (37 * 60 + 46) * 1000), # 17 (modified 8/20)
      ((37 * 60 + 46) * 1000, (37 * 60 + 48) * 1000), # 17 (modified 9/20)
      ((37 * 60 + 48) * 1000, (37 * 60 + 59.5) * 1000), # 17 (modified 10/20)
      ((37 * 60 + 59.5) * 1000, (38 * 60 + 6.5) * 1000), # 17 (modified 11/20)
      ((38 * 60 + 6.5) * 1000, (38 * 60 + 19.25) * 1000), # 17 (modified 12/20)
      ((38 * 60 + 19.25) * 1000, (38 * 60 + 33.25) * 1000), # 17 (modified 13/20)
      ((38 * 60 + 33.25) * 1000, (38 * 60 + 44) * 1000), # 17 (modified 14/20)
      ((38 * 60 + 44) * 1000, (38 * 60 + 54) * 1000), # 17 (modified 15/20)
      ((39 * 60 +  0) * 1000, (39 * 60 + 13) * 1000), # 17 (modified 16/20)
      ((39 * 60 + 13) * 1000, (39 * 60 + 27) * 1000), # 17 (modified 17/20)
      ((39 * 60 + 27) * 1000, (39 * 60 + 36) * 1000), # 17 (modified 18/20)
      ((39 * 60 + 36) * 1000, (39 * 60 + 44) * 1000), # 17 (modified 19/20)
      ((39 * 60 + 44) * 1000, (39 * 60 + 52) * 1000), # 17 (modified 20/20)

      ((39 * 60 + 57) * 1000, (40 * 60 +  5) * 1000), # 18 (original)
      ((40 * 60 +  5) * 1000, (40 * 60 + 16) * 1000), # 18 (original)

      ((41 * 60 + 59) * 1000, (42 * 60 + 13) * 1000), # 19 (original) # 120
      ((42 * 60 + 13) * 1000, (42 * 60 + 23) * 1000), # 19 (original)
      ((42 * 60 + 23) * 1000, (42 * 60 + 33) * 1000), # 19 (original)
      ((42 * 60 + 33) * 1000, (42 * 60 + 44) * 1000), # 19 (original)
      ((42 * 60 + 44) * 1000, (42 * 60 + 55) * 1000), # 19 (original)
      ((42 * 60 + 55) * 1000, (43 * 60 + 9.5) * 1000), # 19 (original) # 125
      ((43 * 60 + 9.5) * 1000, (43 * 60 + 16) * 1000), # 19 (original)
      ((43 * 60 + 16) * 1000, (43 * 60 + 28) * 1000), # 19 (original)
      ((43 * 60 + 28) * 1000, (43 * 60 + 38.5) * 1000), # 19 (original)
      ((43 * 60 + 38.5) * 1000, (43 * 60 + 45) * 1000), # 19 (original)
      ((43 * 60 + 45) * 1000, (43 * 60 + 51.5) * 1000), # 19 (original)
      ((43 * 60 + 51.5) * 1000, (43 * 60 + 59) * 1000), # 19 (original)
      ((43 * 60 + 59) * 1000, (44 * 60 +  8) * 1000), # 19 (original)
      ((44 * 60 +  8) * 1000, (44 * 60 + 15.5) * 1000), # 19 (original)
      ((44 * 60 + 16) * 1000, (44 * 60 + 28) * 1000), # 19 (original)
      ((44 * 60 + 28) * 1000, (44 * 60 + 42.4) * 1000), # 19 (original)
      ((44 * 60 + 42.4) * 1000, (44 * 60 + 48) * 1000), # 19 (original)
      ((44 * 60 + 50) * 1000, (45 * 60 +  4) * 1000), # 19 (original)
      ((45 * 60 +  4) * 1000, (45 * 60 + 10) * 1000), # 19 (original)
      ((45 * 60 + 10) * 1000, (45 * 60 + 25) * 1000), # 19 (original)
      ((45 * 60 + 25) * 1000, (45 * 60 + 31.5) * 1000), # 19 (original)
      ((45 * 60 + 31.5) * 1000, (45 * 60 + 32.25) * 1000), # 19 (original)
      ((45 * 60 + 37.25) * 1000, (45 * 60 + 45.5) * 1000), # 19 (original)
      ((45 * 60 + 45.5) * 1000, (45 * 60 + 55) * 1000), # 19 (original) # 143
      ((45 * 60 + 55) * 1000, (46 * 60 + 5.5) * 1000), # 19 (original)
      ((46 * 60 + 5.5) * 1000, (46 * 60 + 12) * 1000), # 19 (original)
      ((46 * 60 + 12) * 1000, (46 * 60 + 15.5) * 1000), # 19 (original)
      ((46 * 60 + 15.5) * 1000, (46 * 60 + 23.5) * 1000), # 19 (original)
      ((46 * 60 + 23.5) * 1000, (46 * 60 + 36.2) * 1000), # 19 (original)
      ((46 * 60 + 36.2) * 1000, (46 * 60 + 49.2) * 1000), # 19 (original) # 149
      ((46 * 60 + 49.2) * 1000, (46 * 60 + 53) * 1000), # 19 (original) # 149
      ((46 * 60 + 59) * 1000, (47 * 60 + 2 ) * 1000), # 19 (original)
      ((47 * 60 + 59) * 1000, (47 * 60 + 13) * 1000), # 19 (original)

      ((48 * 60 +  4) * 1000, (48 * 60 + 15) * 1000), # 20 (modified 1/4)
      ((48 * 60 + 15) * 1000, (48 * 60 + 26) * 1000), # 20 (modified 2/4)
      ((48 * 60 + 26) * 1000, (48 * 60 + 39.5) * 1000), # 20 (modified 3/4)
      ((48 * 60 + 39.5) * 1000, (48 * 60 + 44) * 1000), # 20 (modified 4/4)

      ((50 * 60 + 13) * 1000, (50 * 60 + 21) * 1000), # 21 (modified 1/9)
      ((50 * 60 + 21) * 1000, (50 * 60 + 28.5) * 1000), # 21 (modified 2/9)
      ((50 * 60 + 28.5) * 1000, (50 * 60 + 37) * 1000), # 21 (modified 3/9)
      ((50 * 60 + 37) * 1000, (50 * 60 + 51) * 1000), # 21 (modified 4/9)
      ((50 * 60 + 51) * 1000, (51 * 60 + 5.5) * 1000), # 21 (modified 5/9)
      ((51 * 60 + 5.5) * 1000, (51 * 60 + 21.5) * 1000), # 21 (modified 6/9)
      ((51 * 60 + 21.5) * 1000, (51 * 60 + 34) * 1000), # 21 (modified 7/9)
      ((51 * 60 + 34) * 1000, (51 * 60 + 39.5) * 1000), # 21 (modified 8/9)
      ((51 * 60 + 39.5) * 1000, (51 * 60 + 50) * 1000), # 21 (modified 9/9) # 164

      ((52 * 60 + 20) * 1000, (52 * 60 + 31) * 1000), # 22 (original)
      ((52 * 60 + 31) * 1000, (52 * 60 + 45) * 1000), # 22 (original)
      ]
    ):
    sound[timeRange_ms[1][0] : timeRange_ms[1][1]].export(
        "../MyTTSDataset/wavs/AlexBoresVoice" + str(timeRange_ms[0]) + ".wav", format="wav"
        )
